/* tslint:disable */
/* eslint-disable */
/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { RouteNodeFromJSON, RouteNodeToJSON } from '../models';
/**
 *
 */
export class SearchApi extends runtime.BaseAPI {
	/**
	 */
	async searchClosestNodeGetRaw(requestParameters, initOverrides) {
		if (requestParameters.latitude === null || requestParameters.latitude === undefined) {
			throw new runtime.RequiredError(
				'latitude',
				'Required parameter requestParameters.latitude was null or undefined when calling searchClosestNodeGet.'
			);
		}
		if (requestParameters.longitude === null || requestParameters.longitude === undefined) {
			throw new runtime.RequiredError(
				'longitude',
				'Required parameter requestParameters.longitude was null or undefined when calling searchClosestNodeGet.'
			);
		}
		if (requestParameters.level === null || requestParameters.level === undefined) {
			throw new runtime.RequiredError(
				'level',
				'Required parameter requestParameters.level was null or undefined when calling searchClosestNodeGet.'
			);
		}
		if (requestParameters.graphVersion === null || requestParameters.graphVersion === undefined) {
			throw new runtime.RequiredError(
				'graphVersion',
				'Required parameter requestParameters.graphVersion was null or undefined when calling searchClosestNodeGet.'
			);
		}
		const queryParameters = {};
		if (requestParameters.latitude !== undefined) {
			queryParameters['latitude'] = requestParameters.latitude;
		}
		if (requestParameters.longitude !== undefined) {
			queryParameters['longitude'] = requestParameters.longitude;
		}
		if (requestParameters.level !== undefined) {
			queryParameters['level'] = requestParameters.level;
		}
		if (requestParameters.graphVersion !== undefined) {
			queryParameters['graphVersion'] = requestParameters.graphVersion;
		}
		const headerParameters = {};
		const response = await this.request(
			{
				path: `/search/closest-node`,
				method: 'GET',
				headers: headerParameters,
				query: queryParameters
			},
			initOverrides
		);
		return new runtime.JSONApiResponse(response, (jsonValue) => RouteNodeFromJSON(jsonValue));
	}
	/**
	 */
	async searchClosestNodeGet(requestParameters, initOverrides) {
		const response = await this.searchClosestNodeGetRaw(requestParameters, initOverrides);
		return await response.value();
	}
}
//# sourceMappingURL=SearchApi.js.map
